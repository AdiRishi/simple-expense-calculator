---
description:
globs:
alwaysApply: false
---
# Simple Expense Calculator - Project Overview

## Purpose
This is a Next.js application that calculates property expenses including mortgage payments and quarterly fees. It helps users estimate monthly and weekly property ownership costs.

## Tech Stack
- **Framework**: Next.js 15.3.2 with App Router
- **Language**: TypeScript 5
- **Styling**: Tailwind CSS 4
- **UI Components**: Radix UI primitives with custom components
- **Package Manager**: pnpm
- **Icons**: Lucide React

## Project Structure

### Core Application Files
- **Main Entry**: [src/app/page.tsx](mdc:src/app/page.tsx) - Homepage that renders the ExpenseCalculator component
- **Layout**: [src/app/layout.tsx](mdc:src/app/layout.tsx) - Root layout with global styles
- **Global Styles**: [src/app/globals.css](mdc:src/app/globals.css) - Tailwind CSS configuration and global styles

### Components

#### Expense Calculator Feature
Located in [src/components/expense-calculator/](mdc:src/components/expense-calculator) - Modular expense calculation components:
- **Main Export**: [index.tsx](mdc:src/components/expense-calculator/index.tsx) - Clean feature export
- **Main Component**: [expense-calculator.tsx](mdc:src/components/expense-calculator/expense-calculator.tsx) - Orchestrates the UI layout
- **Business Logic Hook**: [use-expense-calculations.ts](mdc:src/components/expense-calculator/use-expense-calculations.ts) - Custom hook with calculation logic and localStorage
- **Property Section**: [PropertyPriceSection.tsx](mdc:src/components/expense-calculator/PropertyPriceSection.tsx) - Property price input and mortgage details
- **Fees Section**: [QuarterlyFeesSection.tsx](mdc:src/components/expense-calculator/QuarterlyFeesSection.tsx) - Quarterly fee inputs
- **Results Display**: [ExpenseResults.tsx](mdc:src/components/expense-calculator/ExpenseResults.tsx) - Monthly/weekly expense totals
- **Input Utils**: [input-utils.ts](mdc:src/components/expense-calculator/input-utils.ts) - Shared input handling utilities

#### UI Components
Located in [src/components/ui/](mdc:src/components/ui) - Reusable UI primitives (shadcn-based):
- [button.tsx](mdc:src/components/ui/button.tsx) - Button variants and sizes
- [card.tsx](mdc:src/components/ui/card.tsx) - Card container with header/content/footer
- [input.tsx](mdc:src/components/ui/input.tsx) - Form input component
- [label.tsx](mdc:src/components/ui/label.tsx) - Accessible form labels

### Utilities
- **Utils**: [src/lib/utils.ts](mdc:src/lib/utils.ts) - Utility functions for class name merging

### Configuration
- **TypeScript**: [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration with path aliases
- **Package Info**: [package.json](mdc:package.json) - Dependencies and scripts
- **Next.js Config**: [next.config.ts](mdc:next.config.ts) - Next.js configuration

## Key Features
1. **Property Price Calculator**: Calculates mortgage payments based on property price
2. **Quarterly Fees**: Converts quarterly strata, council, and water fees to monthly/weekly
3. **Real-time Updates**: Live calculation updates as user inputs change
4. **Persistent Storage**: Values cached in localStorage and restored on page refresh
5. **Reset Functionality**: One-click reset button to clear all values
6. **Responsive Design**: Mobile-friendly interface using Tailwind CSS
7. **Type Safety**: Full TypeScript implementation with strict configuration
8. **Modular Architecture**: Separated into focused, reusable components

## Development Commands
- `pnpm dev` - Start development server with Turbopack
- `pnpm build` - Build for production
- `pnpm lint` - Run ESLint
- `pnpm format` - Format code with Prettier
