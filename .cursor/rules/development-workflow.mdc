---
description:
globs:
alwaysApply: false
---
# Development Workflow

## Package Management
This project uses **pnpm** as specified in [package.json](mdc:package.json). Always use pnpm commands instead of npm or yarn.

## Development Scripts
Available scripts from [package.json](mdc:package.json):

### Development
```bash
pnpm dev
```
- Starts Next.js development server with Turbopack for faster builds
- Hot reloading enabled
- Available at `http://localhost:3000`

### Building
```bash
pnpm build
```
- Creates optimized production build
- Type checking occurs during build
- Outputs to `.next/` directory

### Production
```bash
pnpm start
```
- Serves the production build
- Must run `pnpm build` first

### Code Quality
```bash
pnpm lint
```
- Runs ESLint with Next.js configuration
- Configuration in [eslint.config.mjs](mdc:eslint.config.mjs)

```bash
pnpm format
```
- Formats code using Prettier
- Configuration in [.prettierrc.js](mdc:.prettierrc.js)
- Includes import sorting via `@trivago/prettier-plugin-sort-imports`

## Project Dependencies

### Core Framework
- **Next.js 15.3.2**: React framework with App Router
- **React 19.1.0**: Latest React with concurrent features
- **TypeScript 5**: For type safety

### UI & Styling
- **Tailwind CSS 4**: Utility-first CSS framework
- **Radix UI**: Accessible component primitives
- **Lucide React**: Icon library
- **class-variance-authority**: Component variant management

### Development Tools
- **ESLint**: Code linting with Next.js config
- **Prettier**: Code formatting with plugins:
  - Tailwind CSS class sorting
  - Import statement sorting

## TypeScript Configuration
- Configured in [tsconfig.json](mdc:tsconfig.json)
- Uses `@/*` path aliases pointing to `src/*`
- Strict mode enabled for better type safety
- ES2017 target for modern browser support

## File Structure Guidelines
- **Pages**: Place in `src/app/` following App Router conventions
- **Components**: Place in `src/components/` with UI primitives in `ui/` subfolder
- **Utilities**: Place in `src/lib/`
- **Styles**: Global styles in `src/app/globals.css`

## Hot Reload & Development
- File changes trigger automatic reloading
- TypeScript errors appear in both terminal and browser
- Tailwind classes compile on-demand during development

## Build Optimization
- Next.js automatically optimizes bundles
- Tree shaking removes unused code
- Images and fonts are optimized
- Static pages are pre-rendered when possible
